---
# Role tasks to deploy and configure Jenkins CI
- name: Create Jenkins service group
  group:
    name: jenkins
    system: yes
    state: present

- name: Create Jenkins service user
  user:
    name: jenkins
    comment: "Jenkins Automation Server"
    group: jenkins
    system: yes
    shell: /bin/false
    home: /var/jenkins_home
    
- name: Add Jenkins repository key
  apt_key:
    url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
    state: present
  when: ansible_os_family == 'Debian'

- name: Add Jenkins repository
  apt_repository:
    repo: deb https://pkg.jenkins.io/debian-stable binary/
    state: present
    filename: jenkins
  when: ansible_os_family == 'Debian'
  
- name: Add Jenkins repository (RedHat)
  yum_repository:
    name: jenkins
    description: Jenkins YUM repository
    baseurl: http://pkg.jenkins.io/redhat-stable
    gpgcheck: yes
    gpgkey: https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
  when: ansible_os_family == 'RedHat'

- name: Install Jenkins
  package:
    name: jenkins
    state: present
    update_cache: yes
  notify: restart jenkins
    
- name: Create Jenkins init.groovy.d directory
  file:
    path: /var/jenkins_home/init.groovy.d/
    state: directory
    owner: jenkins
    group: jenkins
    mode: '0755'
    
- name: Create admin user script
  template:
    src: basic-security.groovy.j2
    dest: /var/jenkins_home/init.groovy.d/basic-security.groovy
    owner: jenkins
    group: jenkins
    mode: '0644'
  notify: restart jenkins

- name: Configure Jenkins security settings
  template:
    src: config.xml.j2
    dest: /var/jenkins_home/config.xml
    owner: jenkins
    group: jenkins
    mode: '0644'
  notify: restart jenkins
  
- name: Create Jenkins systemd override directory
  file:
    path: /etc/systemd/system/jenkins.service.d
    state: directory
    mode: '0755'
  when: ansible_service_mgr == 'systemd'
  
- name: Configure Jenkins systemd service
  copy:
    dest: /etc/systemd/system/jenkins.service.d/override.conf
    content: |
      [Service]
      Environment="JAVA_OPTS=-Djenkins.install.runSetupWizard=false"
      Environment="JENKINS_HOME=/var/jenkins_home"
    mode: '0644'
  when: ansible_service_mgr == 'systemd'
  notify:
    - reload systemd
    - restart jenkins

- name: Ensure Jenkins service is enabled and started
  systemd:
    name: jenkins
    state: started
    enabled: yes
  when: ansible_service_mgr == 'systemd'
  
- name: Install Jenkins plugins
  jenkins_plugin:
    name: "{{ item }}"
    url_username: "{{ jenkins_admin_user }}"
    url_password: "{{ jenkins_admin_password }}"
    state: present
    timeout: 120
  with_items: "{{ jenkins_plugins }}"
  notify: restart jenkins
  retries: 5
  delay: 10
  register: jenkins_plugins_installed
  until: jenkins_plugins_installed is succeeded
